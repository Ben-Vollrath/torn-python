# coding: utf-8

"""
    Torn API

      * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.  * In case you're using bots to check for changes on openapi.json file, make sure to specificy a custom user-agent header - CloudFlare sometimes prevents requests from default user-agents.

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model1846c4cf1e6878553e36571dc9cac29f200_response import Model1846c4cf1e6878553e36571dc9cac29f200Response

class TestModel1846c4cf1e6878553e36571dc9cac29f200Response(unittest.TestCase):
    """Model1846c4cf1e6878553e36571dc9cac29f200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Model1846c4cf1e6878553e36571dc9cac29f200Response:
        """Test Model1846c4cf1e6878553e36571dc9cac29f200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Model1846c4cf1e6878553e36571dc9cac29f200Response`
        """
        model = Model1846c4cf1e6878553e36571dc9cac29f200Response()
        if include_optional:
            return Model1846c4cf1e6878553e36571dc9cac29f200Response(
                subcrimes = [
                    openapi_client.models.torn_subcrime.TornSubcrime(
                        id = 56, 
                        name = '', 
                        nerve_cost = 56, )
                    ],
                crimes = [
                    openapi_client.models.torn_crime.TornCrime(
                        id = 56, 
                        name = '', 
                        category_id = 56, 
                        category_name = '', 
                        enhancer_id = 56, 
                        enhancer_name = '', 
                        unique_outcomes_count = 56, 
                        unique_outcomes_ids = [
                            56
                            ], 
                        notes = [
                            ''
                            ], )
                    ],
                calendar = openapi_client.models.torn_calendar_response_calendar.TornCalendarResponse_calendar(
                    competitions = [
                        openapi_client.models.torn_calendar_activity.TornCalendarActivity(
                            title = '', 
                            description = '', 
                            start = 56, 
                            end = 56, )
                        ], 
                    events = [
                        openapi_client.models.torn_calendar_activity.TornCalendarActivity(
                            title = '', 
                            description = '', 
                            start = 56, 
                            end = 56, )
                        ], ),
                hof = [
                    null
                    ],
                metadata = openapi_client.models.request_metadata_with_links.RequestMetadataWithLinks(
                    links = openapi_client.models.request_links.RequestLinks(
                        next = '', 
                        prev = '', ), ),
                factionhof = [
                    openapi_client.models.torn_faction_hof.TornFactionHof(
                        id = 56, 
                        name = '', 
                        members = 56, 
                        position = 56, 
                        rank = '', 
                        values = openapi_client.models.faction_hof_values.FactionHofValues(
                            chain = 56, 
                            chain_duration = 56, 
                            respect = 56, ), )
                    ],
                logtypes = [
                    openapi_client.models.torn_log.TornLog(
                        id = 56, 
                        title = '', )
                    ],
                items = [
                    openapi_client.models.torn_item.TornItem(
                        id = 56, 
                        name = '', 
                        description = '', 
                        effect = '', 
                        requirement = '', 
                        image = '', 
                        type = 'Alcohol', 
                        sub_type = 'Heavy artillery', 
                        is_masked = True, 
                        is_tradable = True, 
                        is_found_in_city = True, 
                        value = openapi_client.models.torn_item_value.TornItem_value(
                            vendor = openapi_client.models.torn_item_value_vendor.TornItem_value_vendor(
                                country = '', 
                                name = '', ), 
                            buy_price = 56, 
                            sell_price = 56, 
                            market_price = 56, ), 
                        circulation = 56, 
                        details = null, )
                    ],
                logcategories = [
                    openapi_client.models.torn_log_category.TornLogCategory(
                        id = 56, 
                        title = '', )
                    ],
                education = [
                    openapi_client.models.torn_education.TornEducation(
                        id = 56, 
                        name = '', 
                        courses = [
                            openapi_client.models.torn_education_courses.TornEducationCourses(
                                id = 56, 
                                code = '', 
                                name = '', 
                                description = '', 
                                duration = 56, 
                                rewards = openapi_client.models.torn_education_rewards.TornEducationRewards(
                                    working_stats = openapi_client.models.torn_education_rewards_working_stats.TornEducationRewards_working_stats(
                                        manual_labor = 56, 
                                        intelligence = 56, 
                                        endurance = 56, ), 
                                    effect = '', 
                                    honor = '', ), 
                                prerequisites = openapi_client.models.torn_education_prerequisites.TornEducationPrerequisites(
                                    cost = 56, 
                                    courses = [
                                        56
                                        ], ), )
                            ], )
                    ],
                bounties = [
                    openapi_client.models.bounty.Bounty(
                        target_id = 56, 
                        target_name = '', 
                        target_level = 56, 
                        lister_id = 56, 
                        lister_name = '', 
                        reward = 56, 
                        reason = '', 
                        quantity = 56, 
                        is_anonymous = True, 
                        valid_until = 56, )
                    ],
                itemammo = [
                    openapi_client.models.torn_item_ammo.TornItemAmmo(
                        id = 56, 
                        name = '', 
                        price = 56, 
                        types = [
                            'Standard'
                            ], )
                    ],
                properties = [
                    openapi_client.models.torn_properties_properties_inner.TornProperties_properties_inner(
                        id = 56, 
                        name = '', 
                        cost = 56, 
                        happy = 56, 
                        upkeep = 56, 
                        modifications = [
                            'Hot Tub'
                            ], 
                        staff = [
                            'Maid'
                            ], )
                    ],
                faction_tree = [
                    openapi_client.models.torn_faction_tree.TornFactionTree(
                        name = '', 
                        branches = [
                            openapi_client.models.torn_faction_tree_branch.TornFactionTreeBranch(
                                id = 56, 
                                name = '', 
                                upgrades = [
                                    openapi_client.models.torn_faction_tree_branch_upgrades_inner.TornFactionTreeBranch_upgrades_inner(
                                        name = '', 
                                        level = 56, 
                                        ability = '', 
                                        cost = 56, 
                                        challenge = openapi_client.models.torn_faction_tree_branch_upgrades_inner_challenge.TornFactionTreeBranch_upgrades_inner_challenge(
                                            description = '', 
                                            amount_required = 56, 
                                            stat = 'medicalitemsused', ), )
                                    ], )
                            ], )
                    ],
                attacklog = openapi_client.models.attack_log_response_attacklog.AttackLogResponse_attacklog(
                    log = [
                        openapi_client.models.attack_log.AttackLog(
                            text = '', 
                            timestamp = 56, 
                            action = 'attackerhosp', 
                            icon = '', 
                            attacker = openapi_client.models.attack_log_attacker.AttackLog_attacker(
                                id = 56, 
                                name = '', 
                                item = openapi_client.models.attack_log_attacker_item.AttackLog_attacker_item(
                                    name = '', ), ), 
                            defender = openapi_client.models.attack_log_defender.AttackLog_defender(
                                id = 56, 
                                name = '', ), 
                            attacker_item = openapi_client.models.attack_log_attacker_item_1.AttackLog_attacker_item_1(
                                id = 56, 
                                name = '', ), )
                        ], 
                    summary = [
                        openapi_client.models.attack_log_summary.AttackLogSummary(
                            id = 56, 
                            name = '', 
                            hits = 56, 
                            misses = 56, 
                            damage = 56, )
                        ], ),
                territory = [
                    openapi_client.models.torn_territory.TornTerritory(
                        id = 'AAB', 
                        sector = 56, 
                        size = 56, 
                        density = 56, 
                        slots = 56, 
                        respect = 56, 
                        coordinates = openapi_client.models.torn_territory_coordinates.TornTerritoryCoordinates(
                            x = 1.337, 
                            y = 1.337, ), 
                        neighbors = [
                            'AAB'
                            ], )
                    ],
                itemmods = [
                    openapi_client.models.torn_item_mods.TornItemMods(
                        id = 56, 
                        name = '', 
                        description = '', 
                        dual_fit = True, 
                        weapons = [
                            'Heavy artillery'
                            ], )
                    ],
                selections = [
                    null
                    ],
                timestamp = 56
            )
        else:
            return Model1846c4cf1e6878553e36571dc9cac29f200Response(
                subcrimes = [
                    openapi_client.models.torn_subcrime.TornSubcrime(
                        id = 56, 
                        name = '', 
                        nerve_cost = 56, )
                    ],
                crimes = [
                    openapi_client.models.torn_crime.TornCrime(
                        id = 56, 
                        name = '', 
                        category_id = 56, 
                        category_name = '', 
                        enhancer_id = 56, 
                        enhancer_name = '', 
                        unique_outcomes_count = 56, 
                        unique_outcomes_ids = [
                            56
                            ], 
                        notes = [
                            ''
                            ], )
                    ],
                calendar = openapi_client.models.torn_calendar_response_calendar.TornCalendarResponse_calendar(
                    competitions = [
                        openapi_client.models.torn_calendar_activity.TornCalendarActivity(
                            title = '', 
                            description = '', 
                            start = 56, 
                            end = 56, )
                        ], 
                    events = [
                        openapi_client.models.torn_calendar_activity.TornCalendarActivity(
                            title = '', 
                            description = '', 
                            start = 56, 
                            end = 56, )
                        ], ),
                hof = [
                    null
                    ],
                metadata = openapi_client.models.request_metadata_with_links.RequestMetadataWithLinks(
                    links = openapi_client.models.request_links.RequestLinks(
                        next = '', 
                        prev = '', ), ),
                factionhof = [
                    openapi_client.models.torn_faction_hof.TornFactionHof(
                        id = 56, 
                        name = '', 
                        members = 56, 
                        position = 56, 
                        rank = '', 
                        values = openapi_client.models.faction_hof_values.FactionHofValues(
                            chain = 56, 
                            chain_duration = 56, 
                            respect = 56, ), )
                    ],
                logtypes = [
                    openapi_client.models.torn_log.TornLog(
                        id = 56, 
                        title = '', )
                    ],
                items = [
                    openapi_client.models.torn_item.TornItem(
                        id = 56, 
                        name = '', 
                        description = '', 
                        effect = '', 
                        requirement = '', 
                        image = '', 
                        type = 'Alcohol', 
                        sub_type = 'Heavy artillery', 
                        is_masked = True, 
                        is_tradable = True, 
                        is_found_in_city = True, 
                        value = openapi_client.models.torn_item_value.TornItem_value(
                            vendor = openapi_client.models.torn_item_value_vendor.TornItem_value_vendor(
                                country = '', 
                                name = '', ), 
                            buy_price = 56, 
                            sell_price = 56, 
                            market_price = 56, ), 
                        circulation = 56, 
                        details = null, )
                    ],
                logcategories = [
                    openapi_client.models.torn_log_category.TornLogCategory(
                        id = 56, 
                        title = '', )
                    ],
                education = [
                    openapi_client.models.torn_education.TornEducation(
                        id = 56, 
                        name = '', 
                        courses = [
                            openapi_client.models.torn_education_courses.TornEducationCourses(
                                id = 56, 
                                code = '', 
                                name = '', 
                                description = '', 
                                duration = 56, 
                                rewards = openapi_client.models.torn_education_rewards.TornEducationRewards(
                                    working_stats = openapi_client.models.torn_education_rewards_working_stats.TornEducationRewards_working_stats(
                                        manual_labor = 56, 
                                        intelligence = 56, 
                                        endurance = 56, ), 
                                    effect = '', 
                                    honor = '', ), 
                                prerequisites = openapi_client.models.torn_education_prerequisites.TornEducationPrerequisites(
                                    cost = 56, 
                                    courses = [
                                        56
                                        ], ), )
                            ], )
                    ],
                bounties = [
                    openapi_client.models.bounty.Bounty(
                        target_id = 56, 
                        target_name = '', 
                        target_level = 56, 
                        lister_id = 56, 
                        lister_name = '', 
                        reward = 56, 
                        reason = '', 
                        quantity = 56, 
                        is_anonymous = True, 
                        valid_until = 56, )
                    ],
                itemammo = [
                    openapi_client.models.torn_item_ammo.TornItemAmmo(
                        id = 56, 
                        name = '', 
                        price = 56, 
                        types = [
                            'Standard'
                            ], )
                    ],
                faction_tree = [
                    openapi_client.models.torn_faction_tree.TornFactionTree(
                        name = '', 
                        branches = [
                            openapi_client.models.torn_faction_tree_branch.TornFactionTreeBranch(
                                id = 56, 
                                name = '', 
                                upgrades = [
                                    openapi_client.models.torn_faction_tree_branch_upgrades_inner.TornFactionTreeBranch_upgrades_inner(
                                        name = '', 
                                        level = 56, 
                                        ability = '', 
                                        cost = 56, 
                                        challenge = openapi_client.models.torn_faction_tree_branch_upgrades_inner_challenge.TornFactionTreeBranch_upgrades_inner_challenge(
                                            description = '', 
                                            amount_required = 56, 
                                            stat = 'medicalitemsused', ), )
                                    ], )
                            ], )
                    ],
                attacklog = openapi_client.models.attack_log_response_attacklog.AttackLogResponse_attacklog(
                    log = [
                        openapi_client.models.attack_log.AttackLog(
                            text = '', 
                            timestamp = 56, 
                            action = 'attackerhosp', 
                            icon = '', 
                            attacker = openapi_client.models.attack_log_attacker.AttackLog_attacker(
                                id = 56, 
                                name = '', 
                                item = openapi_client.models.attack_log_attacker_item.AttackLog_attacker_item(
                                    name = '', ), ), 
                            defender = openapi_client.models.attack_log_defender.AttackLog_defender(
                                id = 56, 
                                name = '', ), 
                            attacker_item = openapi_client.models.attack_log_attacker_item_1.AttackLog_attacker_item_1(
                                id = 56, 
                                name = '', ), )
                        ], 
                    summary = [
                        openapi_client.models.attack_log_summary.AttackLogSummary(
                            id = 56, 
                            name = '', 
                            hits = 56, 
                            misses = 56, 
                            damage = 56, )
                        ], ),
                territory = [
                    openapi_client.models.torn_territory.TornTerritory(
                        id = 'AAB', 
                        sector = 56, 
                        size = 56, 
                        density = 56, 
                        slots = 56, 
                        respect = 56, 
                        coordinates = openapi_client.models.torn_territory_coordinates.TornTerritoryCoordinates(
                            x = 1.337, 
                            y = 1.337, ), 
                        neighbors = [
                            'AAB'
                            ], )
                    ],
                itemmods = [
                    openapi_client.models.torn_item_mods.TornItemMods(
                        id = 56, 
                        name = '', 
                        description = '', 
                        dual_fit = True, 
                        weapons = [
                            'Heavy artillery'
                            ], )
                    ],
                selections = [
                    null
                    ],
                timestamp = 56,
        )
        """

    def testModel1846c4cf1e6878553e36571dc9cac29f200Response(self):
        """Test Model1846c4cf1e6878553e36571dc9cac29f200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
