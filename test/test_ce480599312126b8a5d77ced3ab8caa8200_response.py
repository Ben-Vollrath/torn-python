# coding: utf-8

"""
    Torn API

      * The development of Torn's API v2 is still ongoing.  * If selections remain unaltered, they will default to the API v1 version.  * Unlike API v1, API v2 accepts both selections and IDs as path and query parameters.  * If any discrepancies or errors are found, please submit a [bug report](https://www.torn.com/forums.php#/p=forums&f=19&b=0&a=0) on the Torn Forums.  * In case you're using bots to check for changes on openapi.json file, make sure to specificy a custom user-agent header - CloudFlare sometimes prevents requests from default user-agents.

    The version of the OpenAPI document: 3.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ce480599312126b8a5d77ced3ab8caa8200_response import Ce480599312126b8a5d77ced3ab8caa8200Response

class TestCe480599312126b8a5d77ced3ab8caa8200Response(unittest.TestCase):
    """Ce480599312126b8a5d77ced3ab8caa8200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Ce480599312126b8a5d77ced3ab8caa8200Response:
        """Test Ce480599312126b8a5d77ced3ab8caa8200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Ce480599312126b8a5d77ced3ab8caa8200Response`
        """
        model = Ce480599312126b8a5d77ced3ab8caa8200Response()
        if include_optional:
            return Ce480599312126b8a5d77ced3ab8caa8200Response(
                crimes = openapi_client.models.user_crime.UserCrime(
                    nerve_spent = 56, 
                    skill = 56, 
                    progression_bonus = 56, 
                    rewards = openapi_client.models.user_crime_rewards.UserCrimeRewards(
                        money = 56, 
                        ammo = openapi_client.models.user_crime_reward_ammo.UserCrimeRewardAmmo(
                            standard = 56, 
                            special = 56, ), 
                        items = [
                            openapi_client.models.user_crime_reward_item.UserCrimeRewardItem(
                                id = 56, 
                                amount = 56, )
                            ], ), 
                    attempts = openapi_client.models.user_crime_attempts.UserCrimeAttempts(
                        total = 56, 
                        success = 56, 
                        fail = 56, 
                        critical_fail = 56, 
                        subcrimes = [
                            openapi_client.models.user_subcrime.UserSubcrime(
                                id = 56, 
                                total = 56, 
                                success = 56, 
                                fail = 56, )
                            ], ), 
                    uniques = [
                        openapi_client.models.user_crime_uniques.UserCrimeUniques(
                            id = 56, 
                            rewards = openapi_client.models.user_crime_uniques_reward.UserCrimeUniquesReward(
                                items = [
                                    openapi_client.models.user_crime_reward_item.UserCrimeRewardItem(
                                        id = 56, 
                                        amount = 56, )
                                    ], 
                                money = openapi_client.models.user_crime_uniques_reward_money.UserCrimeUniquesRewardMoney(
                                    min = 56, 
                                    max = 56, ), 
                                ammo = openapi_client.models.user_crime_uniques_reward_ammo.UserCrimeUniquesRewardAmmo(
                                    amount = 56, 
                                    type = 'standard', ), ), )
                        ], 
                    miscellaneous = null, ),
                races = [
                    null
                    ],
                metadata = openapi_client.models.request_metadata_with_links.RequestMetadataWithLinks(
                    links = openapi_client.models.request_links.RequestLinks(
                        next = '', 
                        prev = '', ), ),
                enlistedcars = [
                    null
                    ],
                forum_posts = [
                    openapi_client.models.forum_post.ForumPost(
                        id = 56, 
                        thread_id = 56, 
                        author = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        is_legacy = True, 
                        is_topic = True, 
                        is_edited = True, 
                        is_pinned = True, 
                        created_time = 56, 
                        edited_by = 56, 
                        has_quote = True, 
                        quoted_post_id = 56, 
                        content = '', 
                        likes = 56, 
                        dislikes = 56, )
                    ],
                forum_threads = [
                    null
                    ],
                forum_subscribed_threads = [
                    openapi_client.models.forum_subscribed_thread.ForumSubscribedThread(
                        id = 56, 
                        forum_id = 56, 
                        author = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        title = '', 
                        posts = openapi_client.models.forum_subscribed_thread_posts_count.ForumSubscribedThreadPostsCount(
                            new = 56, 
                            total = 56, ), )
                    ],
                forum_feed = [
                    openapi_client.models.forum_feed.ForumFeed(
                        thread_id = 56, 
                        post_id = 56, 
                        user = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        title = '', 
                        text = '', 
                        timestamp = 56, 
                        is_seen = True, 
                        type = 1, )
                    ],
                forum_friends = [
                    openapi_client.models.forum_feed.ForumFeed(
                        thread_id = 56, 
                        post_id = 56, 
                        user = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        title = '', 
                        text = '', 
                        timestamp = 56, 
                        is_seen = True, 
                        type = 1, )
                    ],
                hof = openapi_client.models.user_hof_stats.UserHofStats(
                    attacks = openapi_client.models.hof_value.HofValue(
                        value = 56, 
                        rank = 56, ), 
                    busts = openapi_client.models.hof_value.HofValue(
                        value = 56, 
                        rank = 56, ), 
                    defends = , 
                    networth = , 
                    offences = , 
                    revives = , 
                    level = , 
                    rank = , 
                    awards = , 
                    racing_skill = openapi_client.models.hof_value_float.HofValueFloat(
                        value = 1.337, 
                        rank = 56, ), 
                    racing_points = , 
                    racing_wins = , 
                    travel_time = , 
                    working_stats = , 
                    battle_stats = , ),
                calendar = openapi_client.models.user_calendar.UserCalendar(
                    start_time = '', ),
                racingrecords = [
                    openapi_client.models.user_racing_records_response_racingrecords_inner.UserRacingRecordsResponse_racingrecords_inner(
                        track = openapi_client.models.user_racing_records_response_racingrecords_inner_track.UserRacingRecordsResponse_racingrecords_inner_track(
                            id = 56, 
                            name = '', ), 
                        records = [
                            openapi_client.models.user_racing_records_response_racingrecords_inner_records_inner.UserRacingRecordsResponse_racingrecords_inner_records_inner(
                                car_id = 56, 
                                car_name = '', 
                                lap_time = 56, )
                            ], )
                    ],
                education = openapi_client.models.user_education.UserEducation(
                    complete = [
                        56
                        ], 
                    current = openapi_client.models.user_current_education.UserCurrentEducation(
                        id = 56, 
                        until = 56, ), ),
                bounties = [
                    openapi_client.models.bounty.Bounty(
                        target_id = 56, 
                        target_name = '', 
                        target_level = 56, 
                        lister_id = 56, 
                        lister_name = '', 
                        reward = 56, 
                        reason = '', 
                        quantity = 56, 
                        is_anonymous = True, 
                        valid_until = 56, )
                    ],
                jobranks = openapi_client.models.user_job_ranks.UserJobRanks(
                    army = 'Private', 
                    grocer = 'Bagboy', 
                    casino = 'Gaming Consultant', 
                    medical = 'Medical Student', 
                    law = 'Law Student', 
                    education = 'Recess Supervisor', ),
                properties = [
                    null
                    ],
                faction_balance = openapi_client.models.user_faction_balance.UserFactionBalance(
                    money = 56, 
                    points = 56, ),
                revives = [
                    openapi_client.models.revive_simplified.ReviveSimplified(
                        id = 56, 
                        reviver = openapi_client.models.revive_simplified_reviver.ReviveSimplified_reviver(
                            id = 56, 
                            faction_id = 56, ), 
                        target = openapi_client.models.revive_simplified_target.ReviveSimplified_target(
                            id = 56, 
                            faction_id = 56, 
                            hospital_reason = '', 
                            early_discharge = True, 
                            last_action = 56, 
                            online_status = '', ), 
                        success_chance = 1.337, 
                        result = '', 
                        timestamp = 56, )
                    ],
                itemmarket = [
                    openapi_client.models.user_item_market_listing.UserItemMarketListing(
                        id = 56, 
                        price = 56, 
                        average_price = 56, 
                        amount = 56, 
                        is_anonymous = True, 
                        available = 56, 
                        item = openapi_client.models.user_item_marke_listing_item_details.UserItemMarkeListingItemDetails(
                            id = 56, 
                            name = '', 
                            type = '', 
                            rarity = 'yellow', 
                            uid = 56, 
                            stats = openapi_client.models.item_market_listing_item_stats.ItemMarketListingItemStats(
                                damage = 1.337, 
                                accuracy = 1.337, 
                                armor = 1.337, 
                                quality = 1.337, ), 
                            bonuses = [
                                openapi_client.models.item_market_listing_item_bonus.ItemMarketListingItemBonus(
                                    id = 56, 
                                    title = '', 
                                    description = '', 
                                    value = 56, )
                                ], ), )
                    ],
                list = [
                    openapi_client.models.user_list.UserList(
                        id = 56, 
                        name = '', 
                        level = 56, 
                        faction_id = 56, 
                        last_action = openapi_client.models.user_last_action.UserLastAction(
                            status = '', 
                            timestamp = 56, 
                            relative = '', ), 
                        status = openapi_client.models.user_status.UserStatus(
                            description = '', 
                            details = '', 
                            state = '', 
                            until = 56, ), )
                    ],
                personalstats = [
                    openapi_client.models.personal_stats_historic_stat.PersonalStatsHistoricStat(
                        name = '', 
                        value = 56, 
                        timestamp = 56, )
                    ],
                organized_crime = openapi_client.models.faction_crime.FactionCrime(
                    id = 56, 
                    previous_crime_id = 56, 
                    name = '', 
                    difficulty = 56, 
                    status = 'Recruiting', 
                    created_at = 56, 
                    planning_at = 56, 
                    ready_at = 56, 
                    expired_at = 56, 
                    executed_at = 56, 
                    slots = [
                        openapi_client.models.faction_crime_slot.FactionCrimeSlot(
                            position = '', 
                            position_id = 'P1', 
                            position_number = 56, 
                            item_requirement = openapi_client.models.faction_crime_slot_item_requirement.FactionCrimeSlot_item_requirement(
                                id = 56, 
                                is_reusable = True, 
                                is_available = True, ), 
                            user = openapi_client.models.faction_crime_user.FactionCrimeUser(
                                id = 56, 
                                outcome = 'Successful', 
                                joined_at = 56, 
                                progress = 1.337, ), 
                            checkpoint_pass_rate = 56, )
                        ], 
                    rewards = openapi_client.models.faction_crime_reward.FactionCrimeReward(
                        money = 56, 
                        items = [
                            openapi_client.models.faction_crime_reward_item.FactionCrimeRewardItem(
                                id = 56, 
                                quantity = 56, )
                            ], 
                        respect = 56, 
                        scope = 56, 
                        payout = openapi_client.models.faction_crime_reward_payout.FactionCrimeRewardPayout(
                            type = 'balance', 
                            percentage = 56, 
                            paid_by = 56, 
                            paid_at = 56, ), ), ),
                attacks = [
                    openapi_client.models.attack_simplified.AttackSimplified(
                        id = 56, 
                        code = '', 
                        started = 56, 
                        ended = 56, 
                        attacker = openapi_client.models.attack_player_simplified.AttackPlayerSimplified(
                            id = 56, 
                            faction_id = 56, ), 
                        defender = openapi_client.models.attack_player_simplified.AttackPlayerSimplified(
                            id = 56, 
                            faction_id = 56, ), 
                        result = 'None', 
                        respect_gain = 1.337, 
                        respect_loss = 1.337, )
                    ],
                selections = [
                    null
                    ],
                timestamp = 56
            )
        else:
            return Ce480599312126b8a5d77ced3ab8caa8200Response(
                crimes = openapi_client.models.user_crime.UserCrime(
                    nerve_spent = 56, 
                    skill = 56, 
                    progression_bonus = 56, 
                    rewards = openapi_client.models.user_crime_rewards.UserCrimeRewards(
                        money = 56, 
                        ammo = openapi_client.models.user_crime_reward_ammo.UserCrimeRewardAmmo(
                            standard = 56, 
                            special = 56, ), 
                        items = [
                            openapi_client.models.user_crime_reward_item.UserCrimeRewardItem(
                                id = 56, 
                                amount = 56, )
                            ], ), 
                    attempts = openapi_client.models.user_crime_attempts.UserCrimeAttempts(
                        total = 56, 
                        success = 56, 
                        fail = 56, 
                        critical_fail = 56, 
                        subcrimes = [
                            openapi_client.models.user_subcrime.UserSubcrime(
                                id = 56, 
                                total = 56, 
                                success = 56, 
                                fail = 56, )
                            ], ), 
                    uniques = [
                        openapi_client.models.user_crime_uniques.UserCrimeUniques(
                            id = 56, 
                            rewards = openapi_client.models.user_crime_uniques_reward.UserCrimeUniquesReward(
                                items = [
                                    openapi_client.models.user_crime_reward_item.UserCrimeRewardItem(
                                        id = 56, 
                                        amount = 56, )
                                    ], 
                                money = openapi_client.models.user_crime_uniques_reward_money.UserCrimeUniquesRewardMoney(
                                    min = 56, 
                                    max = 56, ), 
                                ammo = openapi_client.models.user_crime_uniques_reward_ammo.UserCrimeUniquesRewardAmmo(
                                    amount = 56, 
                                    type = 'standard', ), ), )
                        ], 
                    miscellaneous = null, ),
                races = [
                    null
                    ],
                metadata = openapi_client.models.request_metadata_with_links.RequestMetadataWithLinks(
                    links = openapi_client.models.request_links.RequestLinks(
                        next = '', 
                        prev = '', ), ),
                enlistedcars = [
                    null
                    ],
                forum_posts = [
                    openapi_client.models.forum_post.ForumPost(
                        id = 56, 
                        thread_id = 56, 
                        author = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        is_legacy = True, 
                        is_topic = True, 
                        is_edited = True, 
                        is_pinned = True, 
                        created_time = 56, 
                        edited_by = 56, 
                        has_quote = True, 
                        quoted_post_id = 56, 
                        content = '', 
                        likes = 56, 
                        dislikes = 56, )
                    ],
                forum_threads = [
                    null
                    ],
                forum_feed = [
                    openapi_client.models.forum_feed.ForumFeed(
                        thread_id = 56, 
                        post_id = 56, 
                        user = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        title = '', 
                        text = '', 
                        timestamp = 56, 
                        is_seen = True, 
                        type = 1, )
                    ],
                forum_friends = [
                    openapi_client.models.forum_feed.ForumFeed(
                        thread_id = 56, 
                        post_id = 56, 
                        user = openapi_client.models.forum_thread_author.ForumThreadAuthor(
                            id = 56, 
                            username = '', 
                            karma = 56, ), 
                        title = '', 
                        text = '', 
                        timestamp = 56, 
                        is_seen = True, 
                        type = 1, )
                    ],
                hof = openapi_client.models.user_hof_stats.UserHofStats(
                    attacks = openapi_client.models.hof_value.HofValue(
                        value = 56, 
                        rank = 56, ), 
                    busts = openapi_client.models.hof_value.HofValue(
                        value = 56, 
                        rank = 56, ), 
                    defends = , 
                    networth = , 
                    offences = , 
                    revives = , 
                    level = , 
                    rank = , 
                    awards = , 
                    racing_skill = openapi_client.models.hof_value_float.HofValueFloat(
                        value = 1.337, 
                        rank = 56, ), 
                    racing_points = , 
                    racing_wins = , 
                    travel_time = , 
                    working_stats = , 
                    battle_stats = , ),
                calendar = openapi_client.models.user_calendar.UserCalendar(
                    start_time = '', ),
                racingrecords = [
                    openapi_client.models.user_racing_records_response_racingrecords_inner.UserRacingRecordsResponse_racingrecords_inner(
                        track = openapi_client.models.user_racing_records_response_racingrecords_inner_track.UserRacingRecordsResponse_racingrecords_inner_track(
                            id = 56, 
                            name = '', ), 
                        records = [
                            openapi_client.models.user_racing_records_response_racingrecords_inner_records_inner.UserRacingRecordsResponse_racingrecords_inner_records_inner(
                                car_id = 56, 
                                car_name = '', 
                                lap_time = 56, )
                            ], )
                    ],
                education = openapi_client.models.user_education.UserEducation(
                    complete = [
                        56
                        ], 
                    current = openapi_client.models.user_current_education.UserCurrentEducation(
                        id = 56, 
                        until = 56, ), ),
                bounties = [
                    openapi_client.models.bounty.Bounty(
                        target_id = 56, 
                        target_name = '', 
                        target_level = 56, 
                        lister_id = 56, 
                        lister_name = '', 
                        reward = 56, 
                        reason = '', 
                        quantity = 56, 
                        is_anonymous = True, 
                        valid_until = 56, )
                    ],
                jobranks = openapi_client.models.user_job_ranks.UserJobRanks(
                    army = 'Private', 
                    grocer = 'Bagboy', 
                    casino = 'Gaming Consultant', 
                    medical = 'Medical Student', 
                    law = 'Law Student', 
                    education = 'Recess Supervisor', ),
                properties = [
                    null
                    ],
                faction_balance = openapi_client.models.user_faction_balance.UserFactionBalance(
                    money = 56, 
                    points = 56, ),
                revives = [
                    openapi_client.models.revive_simplified.ReviveSimplified(
                        id = 56, 
                        reviver = openapi_client.models.revive_simplified_reviver.ReviveSimplified_reviver(
                            id = 56, 
                            faction_id = 56, ), 
                        target = openapi_client.models.revive_simplified_target.ReviveSimplified_target(
                            id = 56, 
                            faction_id = 56, 
                            hospital_reason = '', 
                            early_discharge = True, 
                            last_action = 56, 
                            online_status = '', ), 
                        success_chance = 1.337, 
                        result = '', 
                        timestamp = 56, )
                    ],
                itemmarket = [
                    openapi_client.models.user_item_market_listing.UserItemMarketListing(
                        id = 56, 
                        price = 56, 
                        average_price = 56, 
                        amount = 56, 
                        is_anonymous = True, 
                        available = 56, 
                        item = openapi_client.models.user_item_marke_listing_item_details.UserItemMarkeListingItemDetails(
                            id = 56, 
                            name = '', 
                            type = '', 
                            rarity = 'yellow', 
                            uid = 56, 
                            stats = openapi_client.models.item_market_listing_item_stats.ItemMarketListingItemStats(
                                damage = 1.337, 
                                accuracy = 1.337, 
                                armor = 1.337, 
                                quality = 1.337, ), 
                            bonuses = [
                                openapi_client.models.item_market_listing_item_bonus.ItemMarketListingItemBonus(
                                    id = 56, 
                                    title = '', 
                                    description = '', 
                                    value = 56, )
                                ], ), )
                    ],
                list = [
                    openapi_client.models.user_list.UserList(
                        id = 56, 
                        name = '', 
                        level = 56, 
                        faction_id = 56, 
                        last_action = openapi_client.models.user_last_action.UserLastAction(
                            status = '', 
                            timestamp = 56, 
                            relative = '', ), 
                        status = openapi_client.models.user_status.UserStatus(
                            description = '', 
                            details = '', 
                            state = '', 
                            until = 56, ), )
                    ],
                personalstats = [
                    openapi_client.models.personal_stats_historic_stat.PersonalStatsHistoricStat(
                        name = '', 
                        value = 56, 
                        timestamp = 56, )
                    ],
                organized_crime = openapi_client.models.faction_crime.FactionCrime(
                    id = 56, 
                    previous_crime_id = 56, 
                    name = '', 
                    difficulty = 56, 
                    status = 'Recruiting', 
                    created_at = 56, 
                    planning_at = 56, 
                    ready_at = 56, 
                    expired_at = 56, 
                    executed_at = 56, 
                    slots = [
                        openapi_client.models.faction_crime_slot.FactionCrimeSlot(
                            position = '', 
                            position_id = 'P1', 
                            position_number = 56, 
                            item_requirement = openapi_client.models.faction_crime_slot_item_requirement.FactionCrimeSlot_item_requirement(
                                id = 56, 
                                is_reusable = True, 
                                is_available = True, ), 
                            user = openapi_client.models.faction_crime_user.FactionCrimeUser(
                                id = 56, 
                                outcome = 'Successful', 
                                joined_at = 56, 
                                progress = 1.337, ), 
                            checkpoint_pass_rate = 56, )
                        ], 
                    rewards = openapi_client.models.faction_crime_reward.FactionCrimeReward(
                        money = 56, 
                        items = [
                            openapi_client.models.faction_crime_reward_item.FactionCrimeRewardItem(
                                id = 56, 
                                quantity = 56, )
                            ], 
                        respect = 56, 
                        scope = 56, 
                        payout = openapi_client.models.faction_crime_reward_payout.FactionCrimeRewardPayout(
                            type = 'balance', 
                            percentage = 56, 
                            paid_by = 56, 
                            paid_at = 56, ), ), ),
                attacks = [
                    openapi_client.models.attack_simplified.AttackSimplified(
                        id = 56, 
                        code = '', 
                        started = 56, 
                        ended = 56, 
                        attacker = openapi_client.models.attack_player_simplified.AttackPlayerSimplified(
                            id = 56, 
                            faction_id = 56, ), 
                        defender = openapi_client.models.attack_player_simplified.AttackPlayerSimplified(
                            id = 56, 
                            faction_id = 56, ), 
                        result = 'None', 
                        respect_gain = 1.337, 
                        respect_loss = 1.337, )
                    ],
                selections = [
                    null
                    ],
                timestamp = 56,
        )
        """

    def testCe480599312126b8a5d77ced3ab8caa8200Response(self):
        """Test Ce480599312126b8a5d77ced3ab8caa8200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
